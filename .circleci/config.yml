version: 2.1

executors:
  php71:
    working_directory: '~/project'
    docker:
      - image: 'circleci/php:7.1'

  php72:
    working_directory: '~/project'
    docker:
      - image: 'circleci/php:7.2'

  php73:
    working_directory: '~/project'
    docker:
      - image: 'circleci/php:7.3'

  php74:
    working_directory: '~/project'
    docker:
      - image: 'circleci/php:7.4'

commands:
    php--run-unit-tests:
        steps:
            - run:
                name: 'Run unit tests'
                command: 'phpdbg -qrr vendor/bin/phpunit'

            - store_test_results:
                path: '.phpunit/report'

    php--run-static-analysis:
        steps:
            - run:
                name: 'Run syntax check'
                command: 'composer lint'
            - run:
                name: 'Run code formatting check'
                command: 'composer sniff'
            - run:
                name: 'Run static analysis'
                command: 'composer analyze'

workflows:
    version: 2

    pipeline:
        jobs:
            - fetch_code

            - php--install-dependencies:
                name: 'php71_install'
                executor_version: 'php71'
                requires: [ fetch_code ]
            - php--testing:
                name: 'php71_testing'
                executor_version: 'php71'
                requires: [ php71_install ]

            - php--install-dependencies:
                name: 'php72_install'
                executor_version: 'php72'
                requires: [ fetch_code ]
            - php--testing:
                name: 'php72_testing'
                executor_version: 'php72'
                requires: [ php72_install ]

            - php--install-dependencies:
                name: 'php73_install'
                executor_version: 'php73'
                requires: [ fetch_code ]
            - php--testing:
                name: 'php73_testing'
                executor_version: 'php73'
                requires: [ php73_install ]

            - php--install-dependencies:
                name: 'php74_install'
                executor_version: 'php74'
                requires: [ fetch_code ]
            - php--testing:
                name: 'php74_testing'
                executor_version: 'php74'
                requires: [ php74_install ]

            - fan_in:
                requires:
                    - 'php71_testing'
                    - 'php72_testing'
                    - 'php73_testing'
                    - 'php74_testing'

# jobs:
#     fetch_code:
#         <<: *php72_defaults
#         steps:
#             - checkout
#             - *persist_workspace

    # install_php_dependencies:
    #     <<: *php72_defaults
    #     steps:
    #         - *attach_workspace

    #         - restore_cache:
    #             keys: [ 'v1-php-deps-{{ checksum "composer.json" }}', 'v1-php-deps' ]

    #         - run:
    #             name: 'Install PHP dependencies'
    #             command: |
    #                 composer --no-interaction --no-progress install
    #                 composer show

    #         - save_cache:
    #             key: 'v1-php-deps-{{ checksum "composer.json" }}'
    #             paths: [ 'vendor' ]

    #         - *persist_workspace

    # static_analysis:
    #     <<: *php72_defaults
    #     steps:
    #         - *attach_workspace
    #         - run:
    #             name: 'Run static analysis'
    #             command: |
    #                 vendor/bin/phpstan analyse \
    #                 -l 5 \
    #                 -c phpstan.neon src \
    #                 --memory-limit=1G \
    #                 src

    # linting:
    #     <<: *php72_defaults
    #     steps:
    #         - *attach_workspace

    #         - run:
    #             name: 'Run syntax check'
    #             command: 'vendor/bin/phplint --no-cache --ansi src'

    #         - run:
    #             name: 'Run code formatting check'
    #             command: 'vendor/bin/phpcs -n --colors src'

jobs:
    php--install-dependencies:
        parameters:
            executor_version:
                type: string

        executor: '<< parameters.executor_version >>'
        steps:
            - attach_workspace: { at: '.' }

            - restore_cache:
                keys:
                    - 'v2-<< parameters.executor_version >>-deps-{{ checksum "composer.json" }}'
                    - 'v2-<< parameters.executor_version >>-deps'

            - php--install-libsodium
            - run:
                name: 'Install PHP dependencies'
                command: |
                    composer \
                        --no-interaction \
                        --no-progress install

                    composer show

            - save_cache:
                key: 'v2-<< parameters.executor_version >>-deps-{{ checksum "composer.json" }}'
                paths: [ 'vendor' ]

            - persist_to_workspace: { root: '.', paths: [ '.' ] }

    php--testing:
        parameters:
            executor_version:
                type: string

        executor: '<< parameters.executor_version >>'

        steps:
            - attach_workspace: { at: '.' }

            - php--run-static-analysis
            - php--run-unit-tests

    fan_in:
        executor: 'php71'
        steps: [ { run: 'whoami' } ]

    fetch_code:
        executor: 'php71'
        steps:
            - checkout
            - persist_to_workspace: { root: '.', paths: [ '.' ] }
